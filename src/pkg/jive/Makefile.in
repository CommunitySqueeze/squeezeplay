# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = jive$(EXEEXT)
@TEST_PROGRAMS_TRUE@test_PROGRAMS = jiveblit$(EXEEXT)
DIST_COMMON = $(am__configure_deps) $(dist_applets_clock_DATA) \
	$(dist_applets_defaultskin_DATA) \
	$(dist_applets_defaultskin_images_DATA) \
	$(dist_applets_defaultskin_sounds_DATA) \
	$(dist_applets_flickr_DATA) $(dist_applets_infobrowser_DATA) \
	$(dist_applets_log_DATA) $(dist_applets_nowplaying_DATA) \
	$(dist_applets_screensavers_DATA) \
	$(dist_applets_screenshot_DATA) \
	$(dist_applets_selectplayer_DATA) \
	$(dist_applets_setupappletinstaller_DATA) \
	$(dist_applets_setupdatetime_DATA) \
	$(dist_applets_setuplanguage_DATA) \
	$(dist_applets_setupslimservers_DATA) \
	$(dist_applets_setupsoundeffects_DATA) \
	$(dist_applets_setupwallpaper_DATA) \
	$(dist_applets_setupwallpaper_wallpaper_DATA) \
	$(dist_applets_slimbrowser_DATA) \
	$(dist_applets_slimdiscovery_DATA) $(dist_jive_DATA) \
	$(dist_jiveui_DATA) $(dist_luanet_DATA) $(dist_luaslim_DATA) \
	$(dist_luautil_DATA) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/configure \
	$(top_srcdir)/src/config.h.in config/config.guess \
	config/config.sub config/depcomp config/install-sh \
	config/ltmain.sh config/missing install-sh missing
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libjiveui_la_DEPENDENCIES =
am_libjiveui_la_OBJECTS = jive_audio.lo jive_event.lo jive_font.lo \
	jive_framework.lo jive_group.lo jive_icon.lo jive_label.lo \
	jive_menu.lo jive_slider.lo jive_style.lo jive_surface.lo \
	jive_textarea.lo jive_textinput.lo jive_tile.lo jive_timer.lo \
	jive_utils.lo jive_widget.lo jive_window.lo lua_jiveui.lo
libjiveui_la_OBJECTS = $(am_libjiveui_la_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(testdir)" \
	"$(DESTDIR)$(applets_clockdir)" \
	"$(DESTDIR)$(applets_defaultskindir)" \
	"$(DESTDIR)$(applets_defaultskin_imagesdir)" \
	"$(DESTDIR)$(applets_defaultskin_soundsdir)" \
	"$(DESTDIR)$(applets_flickrdir)" \
	"$(DESTDIR)$(applets_infobrowserdir)" \
	"$(DESTDIR)$(applets_logdir)" \
	"$(DESTDIR)$(applets_nowplayingdir)" \
	"$(DESTDIR)$(applets_screensaversdir)" \
	"$(DESTDIR)$(applets_screenshotdir)" \
	"$(DESTDIR)$(applets_selectplayerdir)" \
	"$(DESTDIR)$(applets_setupappletinstallerdir)" \
	"$(DESTDIR)$(applets_setupdatetimedir)" \
	"$(DESTDIR)$(applets_setuplanguagedir)" \
	"$(DESTDIR)$(applets_setupslimserversdir)" \
	"$(DESTDIR)$(applets_setupsoundeffectsdir)" \
	"$(DESTDIR)$(applets_setupwallpaperdir)" \
	"$(DESTDIR)$(applets_setupwallpaper_wallpaperdir)" \
	"$(DESTDIR)$(applets_slimbrowserdir)" \
	"$(DESTDIR)$(applets_slimdiscoverydir)" "$(DESTDIR)$(jivedir)" \
	"$(DESTDIR)$(jiveuidir)" "$(DESTDIR)$(luanetdir)" \
	"$(DESTDIR)$(luaslimdir)" "$(DESTDIR)$(luautildir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
testPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(test_PROGRAMS)
am_jive_OBJECTS = jive.$(OBJEXT) jive_debug.$(OBJEXT)
jive_OBJECTS = $(am_jive_OBJECTS)
jive_DEPENDENCIES = libjiveui.la
am_jiveblit_OBJECTS = jiveblit.$(OBJEXT)
jiveblit_OBJECTS = $(am_jiveblit_OBJECTS)
jiveblit_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libjiveui_la_SOURCES) $(jive_SOURCES) $(jiveblit_SOURCES)
DIST_SOURCES = $(libjiveui_la_SOURCES) $(jive_SOURCES) \
	$(jiveblit_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
dist_applets_clockDATA_INSTALL = $(INSTALL_DATA)
dist_applets_defaultskinDATA_INSTALL = $(INSTALL_DATA)
dist_applets_defaultskin_imagesDATA_INSTALL = $(INSTALL_DATA)
dist_applets_defaultskin_soundsDATA_INSTALL = $(INSTALL_DATA)
dist_applets_flickrDATA_INSTALL = $(INSTALL_DATA)
dist_applets_infobrowserDATA_INSTALL = $(INSTALL_DATA)
dist_applets_logDATA_INSTALL = $(INSTALL_DATA)
dist_applets_nowplayingDATA_INSTALL = $(INSTALL_DATA)
dist_applets_screensaversDATA_INSTALL = $(INSTALL_DATA)
dist_applets_screenshotDATA_INSTALL = $(INSTALL_DATA)
dist_applets_selectplayerDATA_INSTALL = $(INSTALL_DATA)
dist_applets_setupappletinstallerDATA_INSTALL = $(INSTALL_DATA)
dist_applets_setupdatetimeDATA_INSTALL = $(INSTALL_DATA)
dist_applets_setuplanguageDATA_INSTALL = $(INSTALL_DATA)
dist_applets_setupslimserversDATA_INSTALL = $(INSTALL_DATA)
dist_applets_setupsoundeffectsDATA_INSTALL = $(INSTALL_DATA)
dist_applets_setupwallpaperDATA_INSTALL = $(INSTALL_DATA)
dist_applets_setupwallpaper_wallpaperDATA_INSTALL = $(INSTALL_DATA)
dist_applets_slimbrowserDATA_INSTALL = $(INSTALL_DATA)
dist_applets_slimdiscoveryDATA_INSTALL = $(INSTALL_DATA)
dist_jiveDATA_INSTALL = $(INSTALL_DATA)
dist_jiveuiDATA_INSTALL = $(INSTALL_DATA)
dist_luanetDATA_INSTALL = $(INSTALL_DATA)
dist_luaslimDATA_INSTALL = $(INSTALL_DATA)
dist_luautilDATA_INSTALL = $(INSTALL_DATA)
DATA = $(dist_applets_clock_DATA) $(dist_applets_defaultskin_DATA) \
	$(dist_applets_defaultskin_images_DATA) \
	$(dist_applets_defaultskin_sounds_DATA) \
	$(dist_applets_flickr_DATA) $(dist_applets_infobrowser_DATA) \
	$(dist_applets_log_DATA) $(dist_applets_nowplaying_DATA) \
	$(dist_applets_screensavers_DATA) \
	$(dist_applets_screenshot_DATA) \
	$(dist_applets_selectplayer_DATA) \
	$(dist_applets_setupappletinstaller_DATA) \
	$(dist_applets_setupdatetime_DATA) \
	$(dist_applets_setuplanguage_DATA) \
	$(dist_applets_setupslimservers_DATA) \
	$(dist_applets_setupsoundeffects_DATA) \
	$(dist_applets_setupwallpaper_DATA) \
	$(dist_applets_setupwallpaper_wallpaper_DATA) \
	$(dist_applets_slimbrowser_DATA) \
	$(dist_applets_slimdiscovery_DATA) $(dist_jive_DATA) \
	$(dist_jiveui_DATA) $(dist_luanet_DATA) $(dist_luaslim_DATA) \
	$(dist_luautil_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEST_PROGRAMS_FALSE = @TEST_PROGRAMS_FALSE@
TEST_PROGRAMS_TRUE = @TEST_PROGRAMS_TRUE@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

# Rules for tolua++ binding files
SUFFIXES = .pkg
TOLUA = tolua++

# Convenience library: libui.la
noinst_LTLIBRARIES = libjiveui.la
BUILT_SOURCES = \
	src/ui/lua_jiveui.c \
	src/version.h

libjiveui_la_SOURCES = \
	src/ui/jive_audio.c \
	src/ui/jive_event.c \
	src/ui/jive_font.c \
	src/ui/jive_framework.c \
	src/ui/jive_group.c \
	src/ui/jive_icon.c \
	src/ui/jive_label.c \
	src/ui/jive_menu.c \
	src/ui/jive_slider.c \
	src/ui/jive_style.c \
	src/ui/jive_surface.c \
	src/ui/jive_textarea.c \
	src/ui/jive_textinput.c \
	src/ui/jive_tile.c \
	src/ui/jive_timer.c \
	src/ui/jive_utils.c \
	src/ui/jive_widget.c \
	src/ui/jive_window.c \
	src/ui/lua_jiveui.c

libjiveui_la_LIBADD = -ltolua++ -llua -lSDL_image -lSDL_ttf -lSDL_gfx -lSDL

# Test programs: jiveblit
testdir = $(bindir)
jive_SOURCES = \
	src/jive.c \
	src/jive_debug.c

jive_LDADD = libjiveui.la -llua

# Test program: jiveblit
jiveblit_SOURCES = \
	src/jiveblit.c

jiveblit_LDADD = -lSDL_image -lSDL_ttf -lSDL_gfx -lSDL

# Data: lua scripts
jivedir = $(pkgdatadir)/jive
dist_jive_DATA = \
	share/jive/JiveMain.lua \
	share/jive/Applet.lua \
	share/jive/AppletManager.lua \
	share/jive/AppletMeta.lua \
	share/jive/Iconbar.lua \
	share/jive/global_strings.txt \
	share/jive/splash.png \
	share/jive/splash.wav

jiveuidir = $(pkgdatadir)/jive/ui
dist_jiveui_DATA = \
	share/jive/ui/Audio.lua \
	share/jive/ui/Checkbox.lua \
	share/jive/ui/Choice.lua \
	share/jive/ui/Event.lua \
	share/jive/ui/Framework.lua \
	share/jive/ui/Font.lua \
	share/jive/ui/Group.lua \
	share/jive/ui/Icon.lua \
	share/jive/ui/Label.lua \
	share/jive/ui/Menu.lua \
	share/jive/ui/Popup.lua \
	share/jive/ui/RadioButton.lua \
	share/jive/ui/RadioGroup.lua \
	share/jive/ui/SimpleMenu.lua \
	share/jive/ui/Scrollbar.lua \
	share/jive/ui/Slider.lua \
	share/jive/ui/Surface.lua \
	share/jive/ui/Textarea.lua \
	share/jive/ui/Textinput.lua \
	share/jive/ui/Tile.lua \
	share/jive/ui/Timer.lua \
	share/jive/ui/Widget.lua \
	share/jive/ui/Window.lua

luanetdir = $(pkgdatadir)/jive/net
dist_luanet_DATA = \
	share/jive/net/Comet.lua \
	share/jive/net/CometRequest.lua \
	share/jive/net/NetworkThread.lua \
	share/jive/net/SocketHttp.lua \
	share/jive/net/SocketHttpQueue.lua \
	share/jive/net/Socket.lua \
	share/jive/net/SocketUdp.lua \
	share/jive/net/SocketTcp.lua \
	share/jive/net/RequestHttp.lua \
	share/jive/net/RequestJsonRpc.lua \
	share/jive/net/HttpPool.lua	

luaslimdir = $(pkgdatadir)/jive/slim
dist_luaslim_DATA = \
	share/jive/slim/Player.lua  \
	share/jive/slim/SlimServer.lua \
	share/jive/slim/SlimServers.lua \
	share/jive/slim/RequestsCli.lua

luautildir = $(pkgdatadir)/jive/utils
dist_luautil_DATA = \
	share/jive/utils/datetime.lua \
	share/jive/utils/debug.lua \
	share/jive/utils/locale.lua \
	share/jive/utils/log.lua \
	share/jive/utils/queue.lua \
	share/jive/utils/strings.lua \
	share/jive/utils/autotable.lua \
	share/jive/utils/jsonfilters.lua \
	share/jive/utils/perfs.lua \
	share/jive/utils/serialize.lua \
	share/jive/utils/table.lua

applets_logdir = $(pkgdatadir)/applets/LogSettings
dist_applets_log_DATA = \
	share/applets/LogSettings/LogSettingsApplet.lua \
	share/applets/LogSettings/LogSettingsMeta.lua

applets_screensaversdir = $(pkgdatadir)/applets/ScreenSavers
dist_applets_screensavers_DATA = \
	share/applets/ScreenSavers/ScreenSaversApplet.lua \
	share/applets/ScreenSavers/ScreenSaversMeta.lua \
	share/applets/ScreenSavers/strings.txt

applets_slimbrowserdir = $(pkgdatadir)/applets/SlimBrowser
dist_applets_slimbrowser_DATA = \
	share/applets/SlimBrowser/SlimBrowserApplet.lua \
	share/applets/SlimBrowser/SlimBrowserMeta.lua \
	share/applets/SlimBrowser/strings.txt \
	share/applets/SlimBrowser/DB.lua

applets_slimdiscoverydir = $(pkgdatadir)/applets/SlimDiscovery
dist_applets_slimdiscovery_DATA = \
	share/applets/SlimDiscovery/SlimDiscoveryApplet.lua \
	share/applets/SlimDiscovery/SlimDiscoveryMeta.lua

applets_flickrdir = $(pkgdatadir)/applets/Flickr
dist_applets_flickr_DATA = \
	share/applets/Flickr/FlickrApplet.lua \
	share/applets/Flickr/FlickrMeta.lua \
	share/applets/Flickr/strings.txt

applets_screenshotdir = $(pkgdatadir)/applets/Screenshot
dist_applets_screenshot_DATA = \
	share/applets/Screenshot/ScreenshotApplet.lua \
	share/applets/Screenshot/ScreenshotMeta.lua

applets_setupdatetimedir = $(pkgdatadir)/applets/SetupDateTime
dist_applets_setupdatetime_DATA = \
	share/applets/SetupDateTime/SetupDateTimeApplet.lua \
	share/applets/SetupDateTime/SetupDateTimeMeta.lua \
	share/applets/SetupDateTime/strings.txt

applets_setupsoundeffectsdir = $(pkgdatadir)/applets/SetupSoundEffects
dist_applets_setupsoundeffects_DATA = \
	share/applets/SetupSoundEffects/SetupSoundEffectsApplet.lua \
	share/applets/SetupSoundEffects/SetupSoundEffectsMeta.lua \
	share/applets/SetupSoundEffects/strings.txt

applets_setuplanguagedir = $(pkgdatadir)/applets/SetupLanguage
dist_applets_setuplanguage_DATA = \
	share/applets/SetupLanguage/SetupLanguageApplet.lua \
	share/applets/SetupLanguage/SetupLanguageMeta.lua \
	share/applets/SetupLanguage/strings.txt

applets_selectplayerdir = $(pkgdatadir)/applets/SelectPlayer
dist_applets_selectplayer_DATA = \
	share/applets/SelectPlayer/SelectPlayerApplet.lua \
	share/applets/SelectPlayer/SelectPlayerMeta.lua \
	share/applets/SelectPlayer/strings.txt

applets_setupslimserversdir = $(pkgdatadir)/applets/SetupSlimServers
dist_applets_setupslimservers_DATA = \
	share/applets/SetupSlimServers/SetupSlimServersApplet.lua \
	share/applets/SetupSlimServers/SetupSlimServersMeta.lua \
	share/applets/SetupSlimServers/strings.txt

applets_clockdir = $(pkgdatadir)/applets/Clock
dist_applets_clock_DATA = \
	share/applets/Clock/ClockApplet.lua \
	share/applets/Clock/ClockMeta.lua \
	share/applets/Clock/strings.txt \
	share/applets/Clock/HourHand.png \
	share/applets/Clock/MinuteHand.png \
	share/applets/Clock/weekday_frame.png \
	share/applets/Clock/clock_classic_bkgrd.png \
	share/applets/Clock/clock_analog_bkgrd.png \
	share/applets/Clock/ClockFace.png \
	share/applets/Clock/Digital_dotmatrix_ghosted_0.png \
	share/applets/Clock/Digital_dotmatrix_ghosted_1.png \
	share/applets/Clock/Digital_dotmatrix_ghosted_2.png \
	share/applets/Clock/Digital_dotmatrix_ghosted_3.png \
	share/applets/Clock/Digital_dotmatrix_ghosted_4.png \
	share/applets/Clock/Digital_dotmatrix_ghosted_5.png \
	share/applets/Clock/Digital_dotmatrix_ghosted_6.png \
	share/applets/Clock/Digital_dotmatrix_ghosted_7.png \
	share/applets/Clock/Digital_dotmatrix_ghosted_8.png \
	share/applets/Clock/Digital_dotmatrix_ghosted_9.png

applets_infobrowserdir = $(pkgdatadir)/applets/InfoBrowser
dist_applets_infobrowser_DATA = \
	share/applets/InfoBrowser/InfoBrowserApplet.lua \
	share/applets/InfoBrowser/InfoBrowserMeta.lua \
	share/applets/InfoBrowser/strings.txt

applets_nowplayingdir = $(pkgdatadir)/applets/NowPlaying
dist_applets_nowplaying_DATA = \
	share/applets/NowPlaying/NowPlayingApplet.lua \
	share/applets/NowPlaying/NowPlayingMeta.lua \
	share/applets/NowPlaying/strings.txt

applets_setupappletinstallerdir = $(pkgdatadir)/applets/SetupAppletInstaller
dist_applets_setupappletinstaller_DATA = \
	share/applets/SetupAppletInstaller/SetupAppletInstallerApplet.lua \
	share/applets/SetupAppletInstaller/SetupAppletInstallerMeta.lua \
	share/applets/SetupAppletInstaller/strings.txt


# Wallpaper
applets_setupwallpaperdir = $(pkgdatadir)/applets/SetupWallpaper
dist_applets_setupwallpaper_DATA = \
	share/applets/SetupWallpaper/SetupWallpaperApplet.lua \
	share/applets/SetupWallpaper/SetupWallpaperMeta.lua \
	share/applets/SetupWallpaper/strings.txt

applets_setupwallpaper_wallpaperdir = $(pkgdatadir)/applets/SetupWallpaper/wallpaper
dist_applets_setupwallpaper_wallpaper_DATA = \
	share/applets/SetupWallpaper/wallpaper/black.png \
	share/applets/SetupWallpaper/wallpaper/Chapple_1.jpg \
	share/applets/SetupWallpaper/wallpaper/Clearly-Ambiguous_1.jpg \
	share/applets/SetupWallpaper/wallpaper/Clearly-Ambiguous_3.jpg \
	share/applets/SetupWallpaper/wallpaper/Clearly-Ambiguous_4.jpg \
	share/applets/SetupWallpaper/wallpaper/Clearly-Ambiguous_6.jpg \
	share/applets/SetupWallpaper/wallpaper/concrete.png \
	share/applets/SetupWallpaper/wallpaper/Los-Cardinalos_1.jpg \
	share/applets/SetupWallpaper/wallpaper/midnight.png \
	share/applets/SetupWallpaper/wallpaper/Orin-Optiglot_1.jpg \
	share/applets/SetupWallpaper/wallpaper/pea.png \
	share/applets/SetupWallpaper/wallpaper/stone.png \
	share/applets/SetupWallpaper/wallpaper/fade_to_black.png \
	share/applets/SetupWallpaper/wallpaper/sunlight.png \
	share/applets/SetupWallpaper/wallpaper/sunrise.png


# Default skin
applets_defaultskindir = $(pkgdatadir)/applets/DefaultSkin
dist_applets_defaultskin_DATA = \
	share/applets/DefaultSkin/DefaultSkinApplet.lua \
	share/applets/DefaultSkin/DefaultSkinMeta.lua


# Data: default skin
applets_defaultskin_imagesdir = $(pkgdatadir)/applets/DefaultSkin/images
dist_applets_defaultskin_images_DATA = \
	share/applets/DefaultSkin/images/checkbox_off.png \
	share/applets/DefaultSkin/images/checkbox_on.png \
	share/applets/DefaultSkin/images/icon_home.png \
	share/applets/DefaultSkin/images/icon_mode_off.png \
	share/applets/DefaultSkin/images/icon_mode_pause.png \
	share/applets/DefaultSkin/images/icon_mode_play.png \
	share/applets/DefaultSkin/images/icon_repeat_1.png \
	share/applets/DefaultSkin/images/icon_repeat_off.png \
	share/applets/DefaultSkin/images/icon_shuffle_1.png \
	share/applets/DefaultSkin/images/icon_shuffle_off.png \
	share/applets/DefaultSkin/images/menu_album_noartwork.png \
	share/applets/DefaultSkin/images/menu_selection_box_bl.png \
	share/applets/DefaultSkin/images/menu_selection_box_b.png \
	share/applets/DefaultSkin/images/menu_selection_box_br.png \
	share/applets/DefaultSkin/images/menu_selection_box_l.png \
	share/applets/DefaultSkin/images/menu_selection_box.png \
	share/applets/DefaultSkin/images/menu_selection_box_r.png \
	share/applets/DefaultSkin/images/menu_selection_box_tl.png \
	share/applets/DefaultSkin/images/menu_selection_box_t.png \
	share/applets/DefaultSkin/images/menu_selection_box_tr.png \
	share/applets/DefaultSkin/images/note.png \
	share/applets/DefaultSkin/images/radiobutton_off.png \
	share/applets/DefaultSkin/images/radiobutton_on.png \
	share/applets/DefaultSkin/images/scrollbar_bkgroundbottom.png \
	share/applets/DefaultSkin/images/scrollbar_bkgroundmid.png \
	share/applets/DefaultSkin/images/scrollbar_bkground.png \
	share/applets/DefaultSkin/images/scrollbar_bkgroundtop.png \
	share/applets/DefaultSkin/images/scrollbar_bodybottom.png \
	share/applets/DefaultSkin/images/scrollbar_bodymid.png \
	share/applets/DefaultSkin/images/scrollbar_bodytop.png \
	share/applets/DefaultSkin/images/selection_right.png \
	share/applets/DefaultSkin/images/selection_wait.png \
	share/applets/DefaultSkin/images/titlebox_bl.png \
	share/applets/DefaultSkin/images/titlebox_b.png \
	share/applets/DefaultSkin/images/titlebox_br.png \
	share/applets/DefaultSkin/images/titlebox_l.png \
	share/applets/DefaultSkin/images/titlebox.png \
	share/applets/DefaultSkin/images/titlebox_r.png \
	share/applets/DefaultSkin/images/titlebox_tl.png \
	share/applets/DefaultSkin/images/titlebox_t.png  \
	share/applets/DefaultSkin/images/titlebox_tr.png \
	share/applets/DefaultSkin/images/border.png \
	share/applets/DefaultSkin/images/border_r.png \
	share/applets/DefaultSkin/images/border_l.png \
	share/applets/DefaultSkin/images/scrollbar_bkground_t.png \
	share/applets/DefaultSkin/images/scrollbar_bkground_b.png \
	share/applets/DefaultSkin/images/helpbox.png \
	share/applets/DefaultSkin/images/helpbox_l.png \
	share/applets/DefaultSkin/images/helpbox_r.png \
	share/applets/DefaultSkin/images/helpbox_t.png \
	share/applets/DefaultSkin/images/helpbox_tl.png \
	share/applets/DefaultSkin/images/helpbox_tr.png \
	share/applets/DefaultSkin/images/slider_bkgrd_l.png \
	share/applets/DefaultSkin/images/slider_bkgrd.png \
	share/applets/DefaultSkin/images/slider_bkgrd_r.png \
	share/applets/DefaultSkin/images/slider_fill_l.png \
	share/applets/DefaultSkin/images/slider_fill.png \
	share/applets/DefaultSkin/images/slider_fill_r.png \
	share/applets/DefaultSkin/images/popupbox_bl.png \
	share/applets/DefaultSkin/images/popupbox_b.png \
	share/applets/DefaultSkin/images/popupbox_br.png \
	share/applets/DefaultSkin/images/popupbox_l.png \
	share/applets/DefaultSkin/images/popupbox.png \
	share/applets/DefaultSkin/images/popupbox_r.png \
	share/applets/DefaultSkin/images/popupbox_tl.png \
	share/applets/DefaultSkin/images/popupbox_t.png \
	share/applets/DefaultSkin/images/popupbox_tr.png \
	share/applets/DefaultSkin/images/text_entry_bkgrd.png \
	share/applets/DefaultSkin/images/text_entry_bkgrd_l.png \
	share/applets/DefaultSkin/images/text_entry_bkgrd_r.png \
	share/applets/DefaultSkin/images/text_entry_letter.png \
	share/applets/DefaultSkin/images/text_entry_select.png \
	share/applets/DefaultSkin/images/popup_alarm_icon.png \
	share/applets/DefaultSkin/images/popup_battery_low_icon.png \
	share/applets/DefaultSkin/images/popup_fav_heart_bkgrd.png \
	share/applets/DefaultSkin/images/popup_locked_icon.png \
	share/applets/DefaultSkin/images/slider_icon_negative.png \
	share/applets/DefaultSkin/images/slider_icon_positive.png \
	share/applets/DefaultSkin/images/volume_bkgrd_l.png \
	share/applets/DefaultSkin/images/volume_bkgrd.png \
	share/applets/DefaultSkin/images/volume_bkgrd_r.png \
	share/applets/DefaultSkin/images/volume_fill_l.png \
	share/applets/DefaultSkin/images/volume_fill.png \
	share/applets/DefaultSkin/images/volume_fill_r.png \
	share/applets/DefaultSkin/images/volume_speaker_l.png \
	share/applets/DefaultSkin/images/volume_speaker_r.png \
	share/applets/DefaultSkin/images/icon_battery_0.png \
	share/applets/DefaultSkin/images/icon_battery_1.png \
	share/applets/DefaultSkin/images/icon_battery_2.png \
	share/applets/DefaultSkin/images/icon_battery_3.png \
	share/applets/DefaultSkin/images/icon_battery_4.png \
	share/applets/DefaultSkin/images/icon_battery_ac.png \
	share/applets/DefaultSkin/images/icon_battery_charging.png \
	share/applets/DefaultSkin/images/icon_wireless_0.png \
	share/applets/DefaultSkin/images/icon_wireless_1.png \
	share/applets/DefaultSkin/images/icon_wireless_2.png \
	share/applets/DefaultSkin/images/icon_wireless_3.png \
	share/applets/DefaultSkin/images/icon_wireless_4.png \
	share/applets/DefaultSkin/images/icon_wireless_off.png \
	share/applets/DefaultSkin/images/icon_wireless_0_shadow.png \
	share/applets/DefaultSkin/images/icon_wireless_1_shadow.png \
	share/applets/DefaultSkin/images/icon_wireless_2_shadow.png \
	share/applets/DefaultSkin/images/icon_wireless_3_shadow.png \
	share/applets/DefaultSkin/images/icon_wireless_4_shadow.png \
	share/applets/DefaultSkin/images/icon_connecting.png \
	share/applets/DefaultSkin/images/icon_connected.png \
        share/applets/DefaultSkin/images/bghighlight_r.png \
        share/applets/DefaultSkin/images/bghighlight.png \
        share/applets/DefaultSkin/images/bghighlight_bl.png \
        share/applets/DefaultSkin/images/bghighlight_br.png \
        share/applets/DefaultSkin/images/bghighlight_b.png \
        share/applets/DefaultSkin/images/bghighlight_l.png \
        share/applets/DefaultSkin/images/bghighlight_tr.png \
        share/applets/DefaultSkin/images/bghighlight_tl.png \
        share/applets/DefaultSkin/images/popup_shutdown_icon.png \
        share/applets/DefaultSkin/images/popup_playlist_icon.png \
        share/applets/DefaultSkin/images/icon_nowplaying.png \
        share/applets/DefaultSkin/images/album_noartwork_166.png \
        share/applets/DefaultSkin/images/icon_nowplaying_selected.png \
        share/applets/DefaultSkin/images/button.png \
        share/applets/DefaultSkin/images/button_b.png \
        share/applets/DefaultSkin/images/button_l.png \
        share/applets/DefaultSkin/images/button_r.png \
        share/applets/DefaultSkin/images/button_t.png \
        share/applets/DefaultSkin/images/button_br.png \
        share/applets/DefaultSkin/images/button_bl.png \
        share/applets/DefaultSkin/images/button_tl.png \
        share/applets/DefaultSkin/images/button_tr.png \
	share/applets/DefaultSkin/images/album_noartwork_166.png \
	share/applets/DefaultSkin/images/album_noartwork_184.png \
	share/applets/DefaultSkin/images/album_shadow_166.png \
	share/applets/DefaultSkin/images/album_shadow_184.png \
	share/applets/DefaultSkin/images/menu_nowplaying.png \
	share/applets/DefaultSkin/images/menu_nowplaying_selected.png \
	share/applets/DefaultSkin/images/menu_playlist.png \
	share/applets/DefaultSkin/images/mini_favorites.png \
	share/applets/DefaultSkin/images/mini_home.png \
	share/applets/DefaultSkin/images/mini_internet_radio.png \
	share/applets/DefaultSkin/images/mini_mymusic.png \
	share/applets/DefaultSkin/images/mini_nowplaying.png \
	share/applets/DefaultSkin/images/mini_quarter_note.png \
	share/applets/DefaultSkin/images/mini_search.png \
	share/applets/DefaultSkin/images/mini_settings.png \
	share/applets/DefaultSkin/images/menu_album_selection_bl.png \
	share/applets/DefaultSkin/images/menu_album_selection_b.png \
	share/applets/DefaultSkin/images/menu_album_selection_br.png \
	share/applets/DefaultSkin/images/menu_album_selection_l.png \
	share/applets/DefaultSkin/images/menu_album_selection.png \
	share/applets/DefaultSkin/images/menu_album_selection_r.png \
	share/applets/DefaultSkin/images/menu_album_selection_tl.png \
	share/applets/DefaultSkin/images/menu_album_selection_t.png \
	share/applets/DefaultSkin/images/menu_album_selection_tr.png

applets_defaultskin_soundsdir = $(pkgdatadir)/applets/DefaultSkin/sounds
dist_applets_defaultskin_sounds_DATA = \
	share/applets/DefaultSkin/sounds/bump.wav \
	share/applets/DefaultSkin/sounds/click.wav \
	share/applets/DefaultSkin/sounds/jump.wav \
	share/applets/DefaultSkin/sounds/pushleft.wav \
	share/applets/DefaultSkin/sounds/pushright.wav \
	share/applets/DefaultSkin/sounds/select.wav \
	share/applets/DefaultSkin/sounds/shutdown.wav \
	share/applets/DefaultSkin/sounds/docking.wav

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .pkg .c .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

src/config.h: src/stamp-h1
	@if test ! -f $@; then \
	  rm -f src/stamp-h1; \
	  $(MAKE) src/stamp-h1; \
	else :; fi

src/stamp-h1: $(top_srcdir)/src/config.h.in $(top_builddir)/config.status
	@rm -f src/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(top_srcdir)/src/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f src/stamp-h1
	touch $@

distclean-hdr:
	-rm -f src/config.h src/stamp-h1

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libjiveui.la: $(libjiveui_la_OBJECTS) $(libjiveui_la_DEPENDENCIES) 
	$(LINK)  $(libjiveui_la_LDFLAGS) $(libjiveui_la_OBJECTS) $(libjiveui_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
install-testPROGRAMS: $(test_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(testdir)" || $(mkdir_p) "$(DESTDIR)$(testdir)"
	@list='$(test_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(testPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(testdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(testPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(testdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-testPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(test_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(testdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(testdir)/$$f"; \
	done

clean-testPROGRAMS:
	@list='$(test_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
jive$(EXEEXT): $(jive_OBJECTS) $(jive_DEPENDENCIES) 
	@rm -f jive$(EXEEXT)
	$(LINK) $(jive_LDFLAGS) $(jive_OBJECTS) $(jive_LDADD) $(LIBS)
jiveblit$(EXEEXT): $(jiveblit_OBJECTS) $(jiveblit_DEPENDENCIES) 
	@rm -f jiveblit$(EXEEXT)
	$(LINK) $(jiveblit_LDFLAGS) $(jiveblit_OBJECTS) $(jiveblit_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_audio.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_event.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_font.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_framework.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_group.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_icon.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_label.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_menu.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_slider.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_style.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_surface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_textarea.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_textinput.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_tile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_timer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_widget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jive_window.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jiveblit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua_jiveui.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

jive_audio.lo: src/ui/jive_audio.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_audio.lo -MD -MP -MF "$(DEPDIR)/jive_audio.Tpo" -c -o jive_audio.lo `test -f 'src/ui/jive_audio.c' || echo '$(srcdir)/'`src/ui/jive_audio.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_audio.Tpo" "$(DEPDIR)/jive_audio.Plo"; else rm -f "$(DEPDIR)/jive_audio.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_audio.c' object='jive_audio.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_audio.lo `test -f 'src/ui/jive_audio.c' || echo '$(srcdir)/'`src/ui/jive_audio.c

jive_event.lo: src/ui/jive_event.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_event.lo -MD -MP -MF "$(DEPDIR)/jive_event.Tpo" -c -o jive_event.lo `test -f 'src/ui/jive_event.c' || echo '$(srcdir)/'`src/ui/jive_event.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_event.Tpo" "$(DEPDIR)/jive_event.Plo"; else rm -f "$(DEPDIR)/jive_event.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_event.c' object='jive_event.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_event.lo `test -f 'src/ui/jive_event.c' || echo '$(srcdir)/'`src/ui/jive_event.c

jive_font.lo: src/ui/jive_font.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_font.lo -MD -MP -MF "$(DEPDIR)/jive_font.Tpo" -c -o jive_font.lo `test -f 'src/ui/jive_font.c' || echo '$(srcdir)/'`src/ui/jive_font.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_font.Tpo" "$(DEPDIR)/jive_font.Plo"; else rm -f "$(DEPDIR)/jive_font.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_font.c' object='jive_font.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_font.lo `test -f 'src/ui/jive_font.c' || echo '$(srcdir)/'`src/ui/jive_font.c

jive_framework.lo: src/ui/jive_framework.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_framework.lo -MD -MP -MF "$(DEPDIR)/jive_framework.Tpo" -c -o jive_framework.lo `test -f 'src/ui/jive_framework.c' || echo '$(srcdir)/'`src/ui/jive_framework.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_framework.Tpo" "$(DEPDIR)/jive_framework.Plo"; else rm -f "$(DEPDIR)/jive_framework.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_framework.c' object='jive_framework.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_framework.lo `test -f 'src/ui/jive_framework.c' || echo '$(srcdir)/'`src/ui/jive_framework.c

jive_group.lo: src/ui/jive_group.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_group.lo -MD -MP -MF "$(DEPDIR)/jive_group.Tpo" -c -o jive_group.lo `test -f 'src/ui/jive_group.c' || echo '$(srcdir)/'`src/ui/jive_group.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_group.Tpo" "$(DEPDIR)/jive_group.Plo"; else rm -f "$(DEPDIR)/jive_group.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_group.c' object='jive_group.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_group.lo `test -f 'src/ui/jive_group.c' || echo '$(srcdir)/'`src/ui/jive_group.c

jive_icon.lo: src/ui/jive_icon.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_icon.lo -MD -MP -MF "$(DEPDIR)/jive_icon.Tpo" -c -o jive_icon.lo `test -f 'src/ui/jive_icon.c' || echo '$(srcdir)/'`src/ui/jive_icon.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_icon.Tpo" "$(DEPDIR)/jive_icon.Plo"; else rm -f "$(DEPDIR)/jive_icon.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_icon.c' object='jive_icon.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_icon.lo `test -f 'src/ui/jive_icon.c' || echo '$(srcdir)/'`src/ui/jive_icon.c

jive_label.lo: src/ui/jive_label.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_label.lo -MD -MP -MF "$(DEPDIR)/jive_label.Tpo" -c -o jive_label.lo `test -f 'src/ui/jive_label.c' || echo '$(srcdir)/'`src/ui/jive_label.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_label.Tpo" "$(DEPDIR)/jive_label.Plo"; else rm -f "$(DEPDIR)/jive_label.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_label.c' object='jive_label.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_label.lo `test -f 'src/ui/jive_label.c' || echo '$(srcdir)/'`src/ui/jive_label.c

jive_menu.lo: src/ui/jive_menu.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_menu.lo -MD -MP -MF "$(DEPDIR)/jive_menu.Tpo" -c -o jive_menu.lo `test -f 'src/ui/jive_menu.c' || echo '$(srcdir)/'`src/ui/jive_menu.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_menu.Tpo" "$(DEPDIR)/jive_menu.Plo"; else rm -f "$(DEPDIR)/jive_menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_menu.c' object='jive_menu.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_menu.lo `test -f 'src/ui/jive_menu.c' || echo '$(srcdir)/'`src/ui/jive_menu.c

jive_slider.lo: src/ui/jive_slider.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_slider.lo -MD -MP -MF "$(DEPDIR)/jive_slider.Tpo" -c -o jive_slider.lo `test -f 'src/ui/jive_slider.c' || echo '$(srcdir)/'`src/ui/jive_slider.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_slider.Tpo" "$(DEPDIR)/jive_slider.Plo"; else rm -f "$(DEPDIR)/jive_slider.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_slider.c' object='jive_slider.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_slider.lo `test -f 'src/ui/jive_slider.c' || echo '$(srcdir)/'`src/ui/jive_slider.c

jive_style.lo: src/ui/jive_style.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_style.lo -MD -MP -MF "$(DEPDIR)/jive_style.Tpo" -c -o jive_style.lo `test -f 'src/ui/jive_style.c' || echo '$(srcdir)/'`src/ui/jive_style.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_style.Tpo" "$(DEPDIR)/jive_style.Plo"; else rm -f "$(DEPDIR)/jive_style.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_style.c' object='jive_style.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_style.lo `test -f 'src/ui/jive_style.c' || echo '$(srcdir)/'`src/ui/jive_style.c

jive_surface.lo: src/ui/jive_surface.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_surface.lo -MD -MP -MF "$(DEPDIR)/jive_surface.Tpo" -c -o jive_surface.lo `test -f 'src/ui/jive_surface.c' || echo '$(srcdir)/'`src/ui/jive_surface.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_surface.Tpo" "$(DEPDIR)/jive_surface.Plo"; else rm -f "$(DEPDIR)/jive_surface.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_surface.c' object='jive_surface.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_surface.lo `test -f 'src/ui/jive_surface.c' || echo '$(srcdir)/'`src/ui/jive_surface.c

jive_textarea.lo: src/ui/jive_textarea.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_textarea.lo -MD -MP -MF "$(DEPDIR)/jive_textarea.Tpo" -c -o jive_textarea.lo `test -f 'src/ui/jive_textarea.c' || echo '$(srcdir)/'`src/ui/jive_textarea.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_textarea.Tpo" "$(DEPDIR)/jive_textarea.Plo"; else rm -f "$(DEPDIR)/jive_textarea.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_textarea.c' object='jive_textarea.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_textarea.lo `test -f 'src/ui/jive_textarea.c' || echo '$(srcdir)/'`src/ui/jive_textarea.c

jive_textinput.lo: src/ui/jive_textinput.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_textinput.lo -MD -MP -MF "$(DEPDIR)/jive_textinput.Tpo" -c -o jive_textinput.lo `test -f 'src/ui/jive_textinput.c' || echo '$(srcdir)/'`src/ui/jive_textinput.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_textinput.Tpo" "$(DEPDIR)/jive_textinput.Plo"; else rm -f "$(DEPDIR)/jive_textinput.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_textinput.c' object='jive_textinput.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_textinput.lo `test -f 'src/ui/jive_textinput.c' || echo '$(srcdir)/'`src/ui/jive_textinput.c

jive_tile.lo: src/ui/jive_tile.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_tile.lo -MD -MP -MF "$(DEPDIR)/jive_tile.Tpo" -c -o jive_tile.lo `test -f 'src/ui/jive_tile.c' || echo '$(srcdir)/'`src/ui/jive_tile.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_tile.Tpo" "$(DEPDIR)/jive_tile.Plo"; else rm -f "$(DEPDIR)/jive_tile.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_tile.c' object='jive_tile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_tile.lo `test -f 'src/ui/jive_tile.c' || echo '$(srcdir)/'`src/ui/jive_tile.c

jive_timer.lo: src/ui/jive_timer.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_timer.lo -MD -MP -MF "$(DEPDIR)/jive_timer.Tpo" -c -o jive_timer.lo `test -f 'src/ui/jive_timer.c' || echo '$(srcdir)/'`src/ui/jive_timer.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_timer.Tpo" "$(DEPDIR)/jive_timer.Plo"; else rm -f "$(DEPDIR)/jive_timer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_timer.c' object='jive_timer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_timer.lo `test -f 'src/ui/jive_timer.c' || echo '$(srcdir)/'`src/ui/jive_timer.c

jive_utils.lo: src/ui/jive_utils.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_utils.lo -MD -MP -MF "$(DEPDIR)/jive_utils.Tpo" -c -o jive_utils.lo `test -f 'src/ui/jive_utils.c' || echo '$(srcdir)/'`src/ui/jive_utils.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_utils.Tpo" "$(DEPDIR)/jive_utils.Plo"; else rm -f "$(DEPDIR)/jive_utils.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_utils.c' object='jive_utils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_utils.lo `test -f 'src/ui/jive_utils.c' || echo '$(srcdir)/'`src/ui/jive_utils.c

jive_widget.lo: src/ui/jive_widget.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_widget.lo -MD -MP -MF "$(DEPDIR)/jive_widget.Tpo" -c -o jive_widget.lo `test -f 'src/ui/jive_widget.c' || echo '$(srcdir)/'`src/ui/jive_widget.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_widget.Tpo" "$(DEPDIR)/jive_widget.Plo"; else rm -f "$(DEPDIR)/jive_widget.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_widget.c' object='jive_widget.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_widget.lo `test -f 'src/ui/jive_widget.c' || echo '$(srcdir)/'`src/ui/jive_widget.c

jive_window.lo: src/ui/jive_window.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_window.lo -MD -MP -MF "$(DEPDIR)/jive_window.Tpo" -c -o jive_window.lo `test -f 'src/ui/jive_window.c' || echo '$(srcdir)/'`src/ui/jive_window.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_window.Tpo" "$(DEPDIR)/jive_window.Plo"; else rm -f "$(DEPDIR)/jive_window.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/jive_window.c' object='jive_window.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_window.lo `test -f 'src/ui/jive_window.c' || echo '$(srcdir)/'`src/ui/jive_window.c

lua_jiveui.lo: src/ui/lua_jiveui.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lua_jiveui.lo -MD -MP -MF "$(DEPDIR)/lua_jiveui.Tpo" -c -o lua_jiveui.lo `test -f 'src/ui/lua_jiveui.c' || echo '$(srcdir)/'`src/ui/lua_jiveui.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/lua_jiveui.Tpo" "$(DEPDIR)/lua_jiveui.Plo"; else rm -f "$(DEPDIR)/lua_jiveui.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/ui/lua_jiveui.c' object='lua_jiveui.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lua_jiveui.lo `test -f 'src/ui/lua_jiveui.c' || echo '$(srcdir)/'`src/ui/lua_jiveui.c

jive.o: src/jive.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive.o -MD -MP -MF "$(DEPDIR)/jive.Tpo" -c -o jive.o `test -f 'src/jive.c' || echo '$(srcdir)/'`src/jive.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive.Tpo" "$(DEPDIR)/jive.Po"; else rm -f "$(DEPDIR)/jive.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/jive.c' object='jive.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive.o `test -f 'src/jive.c' || echo '$(srcdir)/'`src/jive.c

jive.obj: src/jive.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive.obj -MD -MP -MF "$(DEPDIR)/jive.Tpo" -c -o jive.obj `if test -f 'src/jive.c'; then $(CYGPATH_W) 'src/jive.c'; else $(CYGPATH_W) '$(srcdir)/src/jive.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive.Tpo" "$(DEPDIR)/jive.Po"; else rm -f "$(DEPDIR)/jive.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/jive.c' object='jive.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive.obj `if test -f 'src/jive.c'; then $(CYGPATH_W) 'src/jive.c'; else $(CYGPATH_W) '$(srcdir)/src/jive.c'; fi`

jive_debug.o: src/jive_debug.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_debug.o -MD -MP -MF "$(DEPDIR)/jive_debug.Tpo" -c -o jive_debug.o `test -f 'src/jive_debug.c' || echo '$(srcdir)/'`src/jive_debug.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_debug.Tpo" "$(DEPDIR)/jive_debug.Po"; else rm -f "$(DEPDIR)/jive_debug.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/jive_debug.c' object='jive_debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_debug.o `test -f 'src/jive_debug.c' || echo '$(srcdir)/'`src/jive_debug.c

jive_debug.obj: src/jive_debug.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jive_debug.obj -MD -MP -MF "$(DEPDIR)/jive_debug.Tpo" -c -o jive_debug.obj `if test -f 'src/jive_debug.c'; then $(CYGPATH_W) 'src/jive_debug.c'; else $(CYGPATH_W) '$(srcdir)/src/jive_debug.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jive_debug.Tpo" "$(DEPDIR)/jive_debug.Po"; else rm -f "$(DEPDIR)/jive_debug.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/jive_debug.c' object='jive_debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jive_debug.obj `if test -f 'src/jive_debug.c'; then $(CYGPATH_W) 'src/jive_debug.c'; else $(CYGPATH_W) '$(srcdir)/src/jive_debug.c'; fi`

jiveblit.o: src/jiveblit.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jiveblit.o -MD -MP -MF "$(DEPDIR)/jiveblit.Tpo" -c -o jiveblit.o `test -f 'src/jiveblit.c' || echo '$(srcdir)/'`src/jiveblit.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jiveblit.Tpo" "$(DEPDIR)/jiveblit.Po"; else rm -f "$(DEPDIR)/jiveblit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/jiveblit.c' object='jiveblit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jiveblit.o `test -f 'src/jiveblit.c' || echo '$(srcdir)/'`src/jiveblit.c

jiveblit.obj: src/jiveblit.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jiveblit.obj -MD -MP -MF "$(DEPDIR)/jiveblit.Tpo" -c -o jiveblit.obj `if test -f 'src/jiveblit.c'; then $(CYGPATH_W) 'src/jiveblit.c'; else $(CYGPATH_W) '$(srcdir)/src/jiveblit.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/jiveblit.Tpo" "$(DEPDIR)/jiveblit.Po"; else rm -f "$(DEPDIR)/jiveblit.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/jiveblit.c' object='jiveblit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jiveblit.obj `if test -f 'src/jiveblit.c'; then $(CYGPATH_W) 'src/jiveblit.c'; else $(CYGPATH_W) '$(srcdir)/src/jiveblit.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-dist_applets_clockDATA: $(dist_applets_clock_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_clockdir)" || $(mkdir_p) "$(DESTDIR)$(applets_clockdir)"
	@list='$(dist_applets_clock_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_clockDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_clockdir)/$$f'"; \
	  $(dist_applets_clockDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_clockdir)/$$f"; \
	done

uninstall-dist_applets_clockDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_clock_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_clockdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_clockdir)/$$f"; \
	done
install-dist_applets_defaultskinDATA: $(dist_applets_defaultskin_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_defaultskindir)" || $(mkdir_p) "$(DESTDIR)$(applets_defaultskindir)"
	@list='$(dist_applets_defaultskin_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_defaultskinDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_defaultskindir)/$$f'"; \
	  $(dist_applets_defaultskinDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_defaultskindir)/$$f"; \
	done

uninstall-dist_applets_defaultskinDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_defaultskin_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_defaultskindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_defaultskindir)/$$f"; \
	done
install-dist_applets_defaultskin_imagesDATA: $(dist_applets_defaultskin_images_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_defaultskin_imagesdir)" || $(mkdir_p) "$(DESTDIR)$(applets_defaultskin_imagesdir)"
	@list='$(dist_applets_defaultskin_images_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_defaultskin_imagesDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_defaultskin_imagesdir)/$$f'"; \
	  $(dist_applets_defaultskin_imagesDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_defaultskin_imagesdir)/$$f"; \
	done

uninstall-dist_applets_defaultskin_imagesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_defaultskin_images_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_defaultskin_imagesdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_defaultskin_imagesdir)/$$f"; \
	done
install-dist_applets_defaultskin_soundsDATA: $(dist_applets_defaultskin_sounds_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_defaultskin_soundsdir)" || $(mkdir_p) "$(DESTDIR)$(applets_defaultskin_soundsdir)"
	@list='$(dist_applets_defaultskin_sounds_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_defaultskin_soundsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_defaultskin_soundsdir)/$$f'"; \
	  $(dist_applets_defaultskin_soundsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_defaultskin_soundsdir)/$$f"; \
	done

uninstall-dist_applets_defaultskin_soundsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_defaultskin_sounds_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_defaultskin_soundsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_defaultskin_soundsdir)/$$f"; \
	done
install-dist_applets_flickrDATA: $(dist_applets_flickr_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_flickrdir)" || $(mkdir_p) "$(DESTDIR)$(applets_flickrdir)"
	@list='$(dist_applets_flickr_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_flickrDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_flickrdir)/$$f'"; \
	  $(dist_applets_flickrDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_flickrdir)/$$f"; \
	done

uninstall-dist_applets_flickrDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_flickr_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_flickrdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_flickrdir)/$$f"; \
	done
install-dist_applets_infobrowserDATA: $(dist_applets_infobrowser_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_infobrowserdir)" || $(mkdir_p) "$(DESTDIR)$(applets_infobrowserdir)"
	@list='$(dist_applets_infobrowser_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_infobrowserDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_infobrowserdir)/$$f'"; \
	  $(dist_applets_infobrowserDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_infobrowserdir)/$$f"; \
	done

uninstall-dist_applets_infobrowserDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_infobrowser_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_infobrowserdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_infobrowserdir)/$$f"; \
	done
install-dist_applets_logDATA: $(dist_applets_log_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_logdir)" || $(mkdir_p) "$(DESTDIR)$(applets_logdir)"
	@list='$(dist_applets_log_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_logDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_logdir)/$$f'"; \
	  $(dist_applets_logDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_logdir)/$$f"; \
	done

uninstall-dist_applets_logDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_log_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_logdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_logdir)/$$f"; \
	done
install-dist_applets_nowplayingDATA: $(dist_applets_nowplaying_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_nowplayingdir)" || $(mkdir_p) "$(DESTDIR)$(applets_nowplayingdir)"
	@list='$(dist_applets_nowplaying_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_nowplayingDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_nowplayingdir)/$$f'"; \
	  $(dist_applets_nowplayingDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_nowplayingdir)/$$f"; \
	done

uninstall-dist_applets_nowplayingDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_nowplaying_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_nowplayingdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_nowplayingdir)/$$f"; \
	done
install-dist_applets_screensaversDATA: $(dist_applets_screensavers_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_screensaversdir)" || $(mkdir_p) "$(DESTDIR)$(applets_screensaversdir)"
	@list='$(dist_applets_screensavers_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_screensaversDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_screensaversdir)/$$f'"; \
	  $(dist_applets_screensaversDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_screensaversdir)/$$f"; \
	done

uninstall-dist_applets_screensaversDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_screensavers_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_screensaversdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_screensaversdir)/$$f"; \
	done
install-dist_applets_screenshotDATA: $(dist_applets_screenshot_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_screenshotdir)" || $(mkdir_p) "$(DESTDIR)$(applets_screenshotdir)"
	@list='$(dist_applets_screenshot_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_screenshotDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_screenshotdir)/$$f'"; \
	  $(dist_applets_screenshotDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_screenshotdir)/$$f"; \
	done

uninstall-dist_applets_screenshotDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_screenshot_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_screenshotdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_screenshotdir)/$$f"; \
	done
install-dist_applets_selectplayerDATA: $(dist_applets_selectplayer_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_selectplayerdir)" || $(mkdir_p) "$(DESTDIR)$(applets_selectplayerdir)"
	@list='$(dist_applets_selectplayer_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_selectplayerDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_selectplayerdir)/$$f'"; \
	  $(dist_applets_selectplayerDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_selectplayerdir)/$$f"; \
	done

uninstall-dist_applets_selectplayerDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_selectplayer_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_selectplayerdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_selectplayerdir)/$$f"; \
	done
install-dist_applets_setupappletinstallerDATA: $(dist_applets_setupappletinstaller_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_setupappletinstallerdir)" || $(mkdir_p) "$(DESTDIR)$(applets_setupappletinstallerdir)"
	@list='$(dist_applets_setupappletinstaller_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_setupappletinstallerDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_setupappletinstallerdir)/$$f'"; \
	  $(dist_applets_setupappletinstallerDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_setupappletinstallerdir)/$$f"; \
	done

uninstall-dist_applets_setupappletinstallerDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_setupappletinstaller_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_setupappletinstallerdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_setupappletinstallerdir)/$$f"; \
	done
install-dist_applets_setupdatetimeDATA: $(dist_applets_setupdatetime_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_setupdatetimedir)" || $(mkdir_p) "$(DESTDIR)$(applets_setupdatetimedir)"
	@list='$(dist_applets_setupdatetime_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_setupdatetimeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_setupdatetimedir)/$$f'"; \
	  $(dist_applets_setupdatetimeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_setupdatetimedir)/$$f"; \
	done

uninstall-dist_applets_setupdatetimeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_setupdatetime_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_setupdatetimedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_setupdatetimedir)/$$f"; \
	done
install-dist_applets_setuplanguageDATA: $(dist_applets_setuplanguage_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_setuplanguagedir)" || $(mkdir_p) "$(DESTDIR)$(applets_setuplanguagedir)"
	@list='$(dist_applets_setuplanguage_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_setuplanguageDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_setuplanguagedir)/$$f'"; \
	  $(dist_applets_setuplanguageDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_setuplanguagedir)/$$f"; \
	done

uninstall-dist_applets_setuplanguageDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_setuplanguage_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_setuplanguagedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_setuplanguagedir)/$$f"; \
	done
install-dist_applets_setupslimserversDATA: $(dist_applets_setupslimservers_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_setupslimserversdir)" || $(mkdir_p) "$(DESTDIR)$(applets_setupslimserversdir)"
	@list='$(dist_applets_setupslimservers_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_setupslimserversDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_setupslimserversdir)/$$f'"; \
	  $(dist_applets_setupslimserversDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_setupslimserversdir)/$$f"; \
	done

uninstall-dist_applets_setupslimserversDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_setupslimservers_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_setupslimserversdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_setupslimserversdir)/$$f"; \
	done
install-dist_applets_setupsoundeffectsDATA: $(dist_applets_setupsoundeffects_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_setupsoundeffectsdir)" || $(mkdir_p) "$(DESTDIR)$(applets_setupsoundeffectsdir)"
	@list='$(dist_applets_setupsoundeffects_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_setupsoundeffectsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_setupsoundeffectsdir)/$$f'"; \
	  $(dist_applets_setupsoundeffectsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_setupsoundeffectsdir)/$$f"; \
	done

uninstall-dist_applets_setupsoundeffectsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_setupsoundeffects_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_setupsoundeffectsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_setupsoundeffectsdir)/$$f"; \
	done
install-dist_applets_setupwallpaperDATA: $(dist_applets_setupwallpaper_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_setupwallpaperdir)" || $(mkdir_p) "$(DESTDIR)$(applets_setupwallpaperdir)"
	@list='$(dist_applets_setupwallpaper_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_setupwallpaperDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_setupwallpaperdir)/$$f'"; \
	  $(dist_applets_setupwallpaperDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_setupwallpaperdir)/$$f"; \
	done

uninstall-dist_applets_setupwallpaperDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_setupwallpaper_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_setupwallpaperdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_setupwallpaperdir)/$$f"; \
	done
install-dist_applets_setupwallpaper_wallpaperDATA: $(dist_applets_setupwallpaper_wallpaper_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_setupwallpaper_wallpaperdir)" || $(mkdir_p) "$(DESTDIR)$(applets_setupwallpaper_wallpaperdir)"
	@list='$(dist_applets_setupwallpaper_wallpaper_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_setupwallpaper_wallpaperDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_setupwallpaper_wallpaperdir)/$$f'"; \
	  $(dist_applets_setupwallpaper_wallpaperDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_setupwallpaper_wallpaperdir)/$$f"; \
	done

uninstall-dist_applets_setupwallpaper_wallpaperDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_setupwallpaper_wallpaper_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_setupwallpaper_wallpaperdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_setupwallpaper_wallpaperdir)/$$f"; \
	done
install-dist_applets_slimbrowserDATA: $(dist_applets_slimbrowser_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_slimbrowserdir)" || $(mkdir_p) "$(DESTDIR)$(applets_slimbrowserdir)"
	@list='$(dist_applets_slimbrowser_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_slimbrowserDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_slimbrowserdir)/$$f'"; \
	  $(dist_applets_slimbrowserDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_slimbrowserdir)/$$f"; \
	done

uninstall-dist_applets_slimbrowserDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_slimbrowser_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_slimbrowserdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_slimbrowserdir)/$$f"; \
	done
install-dist_applets_slimdiscoveryDATA: $(dist_applets_slimdiscovery_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(applets_slimdiscoverydir)" || $(mkdir_p) "$(DESTDIR)$(applets_slimdiscoverydir)"
	@list='$(dist_applets_slimdiscovery_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_applets_slimdiscoveryDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(applets_slimdiscoverydir)/$$f'"; \
	  $(dist_applets_slimdiscoveryDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(applets_slimdiscoverydir)/$$f"; \
	done

uninstall-dist_applets_slimdiscoveryDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_applets_slimdiscovery_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(applets_slimdiscoverydir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applets_slimdiscoverydir)/$$f"; \
	done
install-dist_jiveDATA: $(dist_jive_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(jivedir)" || $(mkdir_p) "$(DESTDIR)$(jivedir)"
	@list='$(dist_jive_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_jiveDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(jivedir)/$$f'"; \
	  $(dist_jiveDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(jivedir)/$$f"; \
	done

uninstall-dist_jiveDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_jive_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(jivedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(jivedir)/$$f"; \
	done
install-dist_jiveuiDATA: $(dist_jiveui_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(jiveuidir)" || $(mkdir_p) "$(DESTDIR)$(jiveuidir)"
	@list='$(dist_jiveui_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_jiveuiDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(jiveuidir)/$$f'"; \
	  $(dist_jiveuiDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(jiveuidir)/$$f"; \
	done

uninstall-dist_jiveuiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_jiveui_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(jiveuidir)/$$f'"; \
	  rm -f "$(DESTDIR)$(jiveuidir)/$$f"; \
	done
install-dist_luanetDATA: $(dist_luanet_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(luanetdir)" || $(mkdir_p) "$(DESTDIR)$(luanetdir)"
	@list='$(dist_luanet_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_luanetDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(luanetdir)/$$f'"; \
	  $(dist_luanetDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(luanetdir)/$$f"; \
	done

uninstall-dist_luanetDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_luanet_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(luanetdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(luanetdir)/$$f"; \
	done
install-dist_luaslimDATA: $(dist_luaslim_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(luaslimdir)" || $(mkdir_p) "$(DESTDIR)$(luaslimdir)"
	@list='$(dist_luaslim_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_luaslimDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(luaslimdir)/$$f'"; \
	  $(dist_luaslimDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(luaslimdir)/$$f"; \
	done

uninstall-dist_luaslimDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_luaslim_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(luaslimdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(luaslimdir)/$$f"; \
	done
install-dist_luautilDATA: $(dist_luautil_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(luautildir)" || $(mkdir_p) "$(DESTDIR)$(luautildir)"
	@list='$(dist_luautil_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_luautilDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(luautildir)/$$f'"; \
	  $(dist_luautilDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(luautildir)/$$f"; \
	done

uninstall-dist_luautilDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_luautil_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(luautildir)/$$f'"; \
	  rm -f "$(DESTDIR)$(luautildir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkdir_p) $(distdir)/config $(distdir)/share/applets/Clock $(distdir)/share/applets/DefaultSkin $(distdir)/share/applets/DefaultSkin/images $(distdir)/share/applets/DefaultSkin/sounds $(distdir)/share/applets/Flickr $(distdir)/share/applets/InfoBrowser $(distdir)/share/applets/LogSettings $(distdir)/share/applets/NowPlaying $(distdir)/share/applets/ScreenSavers $(distdir)/share/applets/Screenshot $(distdir)/share/applets/SelectPlayer $(distdir)/share/applets/SetupAppletInstaller $(distdir)/share/applets/SetupDateTime $(distdir)/share/applets/SetupLanguage $(distdir)/share/applets/SetupSlimServers $(distdir)/share/applets/SetupSoundEffects $(distdir)/share/applets/SetupWallpaper $(distdir)/share/applets/SetupWallpaper/wallpaper $(distdir)/share/applets/SlimBrowser $(distdir)/share/applets/SlimDiscovery $(distdir)/share/jive $(distdir)/share/jive/net $(distdir)/share/jive/slim $(distdir)/share/jive/ui $(distdir)/share/jive/utils $(distdir)/src
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(testdir)" "$(DESTDIR)$(applets_clockdir)" "$(DESTDIR)$(applets_defaultskindir)" "$(DESTDIR)$(applets_defaultskin_imagesdir)" "$(DESTDIR)$(applets_defaultskin_soundsdir)" "$(DESTDIR)$(applets_flickrdir)" "$(DESTDIR)$(applets_infobrowserdir)" "$(DESTDIR)$(applets_logdir)" "$(DESTDIR)$(applets_nowplayingdir)" "$(DESTDIR)$(applets_screensaversdir)" "$(DESTDIR)$(applets_screenshotdir)" "$(DESTDIR)$(applets_selectplayerdir)" "$(DESTDIR)$(applets_setupappletinstallerdir)" "$(DESTDIR)$(applets_setupdatetimedir)" "$(DESTDIR)$(applets_setuplanguagedir)" "$(DESTDIR)$(applets_setupslimserversdir)" "$(DESTDIR)$(applets_setupsoundeffectsdir)" "$(DESTDIR)$(applets_setupwallpaperdir)" "$(DESTDIR)$(applets_setupwallpaper_wallpaperdir)" "$(DESTDIR)$(applets_slimbrowserdir)" "$(DESTDIR)$(applets_slimdiscoverydir)" "$(DESTDIR)$(jivedir)" "$(DESTDIR)$(jiveuidir)" "$(DESTDIR)$(luanetdir)" "$(DESTDIR)$(luaslimdir)" "$(DESTDIR)$(luautildir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-testPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-dist_applets_clockDATA \
	install-dist_applets_defaultskinDATA \
	install-dist_applets_defaultskin_imagesDATA \
	install-dist_applets_defaultskin_soundsDATA \
	install-dist_applets_flickrDATA \
	install-dist_applets_infobrowserDATA \
	install-dist_applets_logDATA \
	install-dist_applets_nowplayingDATA \
	install-dist_applets_screensaversDATA \
	install-dist_applets_screenshotDATA \
	install-dist_applets_selectplayerDATA \
	install-dist_applets_setupappletinstallerDATA \
	install-dist_applets_setupdatetimeDATA \
	install-dist_applets_setuplanguageDATA \
	install-dist_applets_setupslimserversDATA \
	install-dist_applets_setupsoundeffectsDATA \
	install-dist_applets_setupwallpaperDATA \
	install-dist_applets_setupwallpaper_wallpaperDATA \
	install-dist_applets_slimbrowserDATA \
	install-dist_applets_slimdiscoveryDATA install-dist_jiveDATA \
	install-dist_jiveuiDATA install-dist_luanetDATA \
	install-dist_luaslimDATA install-dist_luautilDATA \
	install-testPROGRAMS

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_applets_clockDATA \
	uninstall-dist_applets_defaultskinDATA \
	uninstall-dist_applets_defaultskin_imagesDATA \
	uninstall-dist_applets_defaultskin_soundsDATA \
	uninstall-dist_applets_flickrDATA \
	uninstall-dist_applets_infobrowserDATA \
	uninstall-dist_applets_logDATA \
	uninstall-dist_applets_nowplayingDATA \
	uninstall-dist_applets_screensaversDATA \
	uninstall-dist_applets_screenshotDATA \
	uninstall-dist_applets_selectplayerDATA \
	uninstall-dist_applets_setupappletinstallerDATA \
	uninstall-dist_applets_setupdatetimeDATA \
	uninstall-dist_applets_setuplanguageDATA \
	uninstall-dist_applets_setupslimserversDATA \
	uninstall-dist_applets_setupsoundeffectsDATA \
	uninstall-dist_applets_setupwallpaperDATA \
	uninstall-dist_applets_setupwallpaper_wallpaperDATA \
	uninstall-dist_applets_slimbrowserDATA \
	uninstall-dist_applets_slimdiscoveryDATA \
	uninstall-dist_jiveDATA uninstall-dist_jiveuiDATA \
	uninstall-dist_luanetDATA uninstall-dist_luaslimDATA \
	uninstall-dist_luautilDATA uninstall-info-am \
	uninstall-testPROGRAMS

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-testPROGRAMS ctags dist dist-all \
	dist-bzip2 dist-gzip dist-shar dist-tarZ dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dist_applets_clockDATA \
	install-dist_applets_defaultskinDATA \
	install-dist_applets_defaultskin_imagesDATA \
	install-dist_applets_defaultskin_soundsDATA \
	install-dist_applets_flickrDATA \
	install-dist_applets_infobrowserDATA \
	install-dist_applets_logDATA \
	install-dist_applets_nowplayingDATA \
	install-dist_applets_screensaversDATA \
	install-dist_applets_screenshotDATA \
	install-dist_applets_selectplayerDATA \
	install-dist_applets_setupappletinstallerDATA \
	install-dist_applets_setupdatetimeDATA \
	install-dist_applets_setuplanguageDATA \
	install-dist_applets_setupslimserversDATA \
	install-dist_applets_setupsoundeffectsDATA \
	install-dist_applets_setupwallpaperDATA \
	install-dist_applets_setupwallpaper_wallpaperDATA \
	install-dist_applets_slimbrowserDATA \
	install-dist_applets_slimdiscoveryDATA install-dist_jiveDATA \
	install-dist_jiveuiDATA install-dist_luanetDATA \
	install-dist_luaslimDATA install-dist_luautilDATA install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip install-testPROGRAMS installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_applets_clockDATA \
	uninstall-dist_applets_defaultskinDATA \
	uninstall-dist_applets_defaultskin_imagesDATA \
	uninstall-dist_applets_defaultskin_soundsDATA \
	uninstall-dist_applets_flickrDATA \
	uninstall-dist_applets_infobrowserDATA \
	uninstall-dist_applets_logDATA \
	uninstall-dist_applets_nowplayingDATA \
	uninstall-dist_applets_screensaversDATA \
	uninstall-dist_applets_screenshotDATA \
	uninstall-dist_applets_selectplayerDATA \
	uninstall-dist_applets_setupappletinstallerDATA \
	uninstall-dist_applets_setupdatetimeDATA \
	uninstall-dist_applets_setuplanguageDATA \
	uninstall-dist_applets_setupslimserversDATA \
	uninstall-dist_applets_setupsoundeffectsDATA \
	uninstall-dist_applets_setupwallpaperDATA \
	uninstall-dist_applets_setupwallpaper_wallpaperDATA \
	uninstall-dist_applets_slimbrowserDATA \
	uninstall-dist_applets_slimdiscoveryDATA \
	uninstall-dist_jiveDATA uninstall-dist_jiveuiDATA \
	uninstall-dist_luanetDATA uninstall-dist_luaslimDATA \
	uninstall-dist_luautilDATA uninstall-info-am \
	uninstall-testPROGRAMS

.pkg.c:
	$(TOLUA) $(TOLUAFLAGS) $(AM_TOLUAFLAGS) -n jive -o $@ $^

src/version.h: FORCE
	@echo '/* This file is automatically generated */' > src/version.h
	@echo -n '#define JIVE_VERSION "' >> src/version.h
	@echo -n `cat ../jive.version` >> src/version.h
	@echo -n ' r' >> src/version.h
	@svnversion -n .. >> src/version.h
	@echo '"' >> src/version.h

FORCE:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
